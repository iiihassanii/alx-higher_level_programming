The add_integer module
======================
Using add two integer
-------------------
import the model
	>>> add_integer = __import__('0-add_integer').add_integer

Now use it:
Adding two integers returns the sum of the two integers.
	>>> add_integer(1,5)
	6

Adding two floats returns the sum of the two floats.
	>>> add_integer(2.5, 3.5)
	5

Adding an integer and a float returns the sum of the two numbers.
	>>> add_integer(2, 3.5)
	5

Adding a negative integer and a positive integer returns the sum of the two integers.
	>>> add_integer(-5, 10)
	5

The function adds two negative numbers and returns the result.
	>>> add_integer(-5, -3)
	-8

Send one agrmunt to the function
	>>> add_integer(1)
	99

The function raises a TypeError if a is not an integer or float.
	>>> add_integer("2", 3)
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

The function raises a TypeError if b is not an integer or float.
	>>> add_integer(2, "3")
	Traceback (most recent call last):
	TypeError: b must be an integer


Send three argmunts to the function
	>>> add_integer(1, 1, 1)
	Traceback (most recent call last):
	...
	TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Send no argmunt to the function
	>>> add_integer()
	Traceback (most recent call last):
	...
	TypeError: add_integer() missing 1 required positional argument: 'a'
